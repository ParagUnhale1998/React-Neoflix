{"version":3,"file":"static/js/270.38642040.chunk.js","mappings":"oMAiBA,QAdA,SAAYA,GAAsB,IAArB,IAAEC,EAAG,UAAEC,GAAWF,EAC7B,OACEG,EAAAA,EAAAA,KAACC,EAAAA,cAAa,CACNF,UAAWA,GAAa,GACxBG,IAAI,GACJC,OAAO,OACPC,aAAc,CACZC,MAAO,CAACC,gBAAiB,OAE3BR,IAAG,kCAAAS,OAAoCT,IAGnD,E,2EC2BA,QAtCA,SAAmBD,GAA0C,IAAzC,KAAEW,EAAI,QAAEC,EAAO,QAAEC,EAAO,WAAEC,GAAYd,EAOxD,OACEe,EAAAA,EAAAA,MAAA,OAAKb,UAAU,4DAA6Dc,QAN5DC,KAChBL,GAAQ,GACRE,EAAW,KAAK,EAI+EI,SAAA,EAC7Ff,EAAAA,EAAAA,KAAA,OACED,UAAU,4GAGZC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,sFAAqFgB,UAClGf,EAAAA,EAAAA,KAAA,OAAKD,UAAU,oEAAmEgB,UAOhFf,EAAAA,EAAAA,KAAA,OAAKD,UAAU,0CAAyCgB,UAGxDf,EAAAA,EAAAA,KAACgB,IAAW,CACVC,IAAG,mCAAAV,OAAqCG,GACxCQ,UAAQ,EACRC,MAAM,OACNC,OAAO,iBAQnB,E,uBCjBA,QApBA,SAAkBvB,GAAkC,IAAjC,YAACwB,EAAW,IAAEvB,EAAG,UAAEC,GAAWF,EAC/C,OACEG,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CACLC,eAAe,EACfC,cAAe,GACfC,cAAe,GACfC,YAAa,IACbC,gBAAiB,IACjBC,WAAW,EACXC,aAAa,EACbC,gBAAiB,GACjBC,cAAc,EACdC,MAAO,EAAEjB,UAGPf,EAAAA,EAAAA,KAAA,OAAKF,IAAG,kCAAAS,OAAoCT,GAAOI,IAAI,GAAGH,UAAWA,KAG3E,ECHA,QAfA,SAAcF,GAAsB,IAArB,IAAEC,EAAG,UAAEC,GAAWF,EAC/B,OACEG,EAAAA,EAAAA,KAACC,EAAAA,cAAa,CACNF,UAAWA,GAAa,GACxBG,IAAI,GAEJC,OAAO,OACPC,aAAc,CACVC,MAAO,CAACC,gBAAiB,OAE7BR,IAAG,sCAAAS,OAAwCT,IAGvD,EC0LA,QA5LA,SAAsBD,GAAmB,IAADoC,EAAAC,EAAA,IAAjB,MAAEC,EAAK,KAAEC,GAAMvC,EACpC,MACOW,EAAMC,IAAW4B,EAAAA,EAAAA,WAAS,IAC1B3B,EAASC,IAAc0B,EAAAA,EAAAA,UAAS,OACjC,UAAEC,EAAS,GAAEC,IAAOC,EAAAA,EAAAA,MACpB,KAAEC,EAAI,QAAEC,IAAYC,EAAAA,EAAAA,GAAS,IAADpC,OAAK+B,EAAS,KAAA/B,OAAIgC,IAE9CK,GAASC,EAAAA,EAAAA,UAAQ,SAAAC,EAAA,OAAU,OAAJL,QAAI,IAAJA,GAAY,QAARK,EAAJL,EAAMG,cAAM,IAAAE,OAAR,EAAJA,EAAcC,KAAKC,GAAMA,EAAET,IAAG,GAAE,CAACE,IACxDQ,GAAWJ,EAAAA,EAAAA,UAAQ,IAAU,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMc,QAAQC,GAAgB,aAAVA,EAAEC,OAAqB,CAAChB,IACrEiB,GAASR,EAAAA,EAAAA,UACb,IAAU,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMc,QAAQC,GAAM,CAAC,aAAc,QAAS,UAAUG,SAASH,EAAEC,QACvE,CAAChB,IAoBH,OACEpC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,mBAAkBgB,SAC7B2B,EAqJA,eApJA1C,EAAAA,EAAAA,KAAAuD,EAAAA,SAAA,CAAAxC,WACK0B,IACD7B,EAAAA,EAAAA,MAAC4C,EAAAA,SAAc,CAAAzC,SAAA,EACbf,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kDAAiDgB,UAC9Df,EAAAA,EAAAA,KAACyD,EAAK,CACJ1D,UAAW,+CACXD,IAAK2C,EAAKiB,eAAiBjB,EAAKkB,iBAIpC3D,EAAAA,EAAAA,KAAA,OAAKD,UAAU,qJACfa,EAAAA,EAAAA,MAACgD,EAAAA,EAAS,CAAA7C,SAAA,EACRH,EAAAA,EAAAA,MAAA,OAAKb,UAAU,iHAAgHgB,SAAA,EAC7Hf,EAAAA,EAAAA,KAAA,OAAKD,UAAU,mCAAkCgB,SAC9C0B,EAAKkB,aACJ3D,EAAAA,EAAAA,KAAC6D,EAAS,CAER9D,UAAU,0FACVD,IAAK2C,EAAKkB,eAGZ3D,EAAAA,EAAAA,KAAC6D,EAAS,CAER9D,UAAU,0FACVD,IAzDC,+BA6DPc,EAAAA,EAAAA,MAAA,OAAKb,UAAU,+FAA8FgB,SAAA,EAC3Gf,EAAAA,EAAAA,KAAA,OAAKD,UAAU,+BAA8BgB,SAAA,GAAAR,OACvCkC,EAAKqB,MAAQrB,EAAKsB,MAAK,OAAAxD,OAAMyD,IAC3B,OAAJvB,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,cACNC,OAAO,QAAO,QAElBlE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,qCAAoCgB,SAChD0B,EAAK0B,WAERnE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,+CAA8CgB,UAC3Df,EAAAA,EAAAA,KAACoE,EAAAA,EAAM,CAAC3B,KAAMG,EAAQyB,KAAM/B,OAE9B1B,EAAAA,EAAAA,MAAA,OAAKb,UAAU,mDAAkDgB,SAAA,EAC/Df,EAAAA,EAAAA,KAACsE,EAAAA,EAAY,CACXC,KAAM,OACNpD,MAAO,8BACPqD,OAAQ/B,EAAKgC,aAAaC,QAAQ,MAEpC9D,EAAAA,EAAAA,MAAA,OACEb,UAAU,8EACVc,QA9DE8D,KACtBlE,GAAQ,GACRE,EAAWwB,EAAMyC,IAAI,EA4DwB7D,SAAA,EAGzBf,EAAAA,EAAAA,KAAC6E,EAAAA,IAAe,CAAC9E,UAAU,2KAE3BC,EAAAA,EAAAA,KAAA,QAAMD,UAAU,wFAAuFgB,SAAC,yBAK5GH,EAAAA,EAAAA,MAAA,OAAKb,UAAU,WAAUgB,SAAA,EACvBf,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iDAAgDgB,SAAC,cAGhEf,EAAAA,EAAAA,KAAA,OAAKD,UAAU,uCAAsCgB,SAClD0B,EAAKqC,eAGVlE,EAAAA,EAAAA,MAAA,OAAKb,UAAU,qDAAoDgB,SAAA,CAChE0B,EAAKsC,SACJnE,EAAAA,EAAAA,MAAA,OAAKb,UAAU,sBAAqBgB,SAAA,EAClCf,EAAAA,EAAAA,KAAA,QAAMD,UAAU,iBAAgBgB,SAAC,cACjCf,EAAAA,EAAAA,KAAA,QAAMD,UAAU,uBAAsBgB,SACnC0B,EAAKsC,YAIXtC,EAAKwB,eACJrD,EAAAA,EAAAA,MAAA,OAAKb,UAAU,sBAAqBgB,SAAA,EAClCf,EAAAA,EAAAA,KAAA,QAAMD,UAAU,iBAAgBgB,SAAC,oBACjCf,EAAAA,EAAAA,KAAA,QAAMD,UAAU,kBAAiBgB,SAC9BiD,IAAMvB,EAAKwB,cAAcC,OAAO,oBAItCzB,EAAKuC,UACJpE,EAAAA,EAAAA,MAAA,OAAKb,UAAU,sBAAqBgB,SAAA,EAClCf,EAAAA,EAAAA,KAAA,QAAMD,UAAU,iBAAgBgB,SAAC,eACjCf,EAAAA,EAAAA,KAAA,QAAMD,UAAU,kBAAiBgB,SA1G9BkE,KACzB,MAAMC,EAAQC,KAAKC,MAAMH,EAAe,IAClCI,EAAUJ,EAAe,GAC/B,MAAM,GAAN1E,OAAU2E,EAAK,KAAA3E,OAAI8E,EAAU,EAAC,IAAA9E,OAAO8E,EAAO,KAAM,GAAE,EAwG3BC,CAAkB7C,EAAKuC,kBAKvB,OAAR/B,QAAQ,IAARA,OAAQ,EAARA,EAAUsC,QAAS,IAClB3E,EAAAA,EAAAA,MAAA,OAAKb,UAAU,OAAMgB,SAAA,EACnBf,EAAAA,EAAAA,KAAA,QAAMD,UAAU,iBAAgBgB,SAAC,gBACjCf,EAAAA,EAAAA,KAAA,QAAMD,UAAU,kBAAiBgB,SACtB,OAARkC,QAAQ,IAARA,OAAQ,EAARA,EAAUF,KAAI,CAACyC,EAAGC,KACjB7E,EAAAA,EAAAA,MAAA,QAAAG,SAAA,CACGyE,EAAE1B,KACFb,EAASsC,OAAS,IAAME,GAAK,OAFrBA,WASZ,OAANpC,QAAM,IAANA,OAAM,EAANA,EAAQkC,QAAS,IAChB3E,EAAAA,EAAAA,MAAA,OAAKb,UAAU,OAAMgB,SAAA,EACnBf,EAAAA,EAAAA,KAAA,QAAMD,UAAU,iBAAgBgB,SAAC,cACjCf,EAAAA,EAAAA,KAAA,QAAMD,UAAU,kBAAiBgB,SACxB,OAANsC,QAAM,IAANA,OAAM,EAANA,EAAQN,KAAI,CAACyC,EAAGC,KACf7E,EAAAA,EAAAA,MAAA,QAAAG,SAAA,CACGyE,EAAE1B,KACFT,EAAOkC,OAAS,IAAME,GAAK,OAFnBA,WASd,OAAJhD,QAAI,IAAJA,GAAgB,QAAZR,EAAJQ,EAAMiD,kBAAU,IAAAzD,OAAZ,EAAJA,EAAkBsD,QAAS,IAC1B3E,EAAAA,EAAAA,MAAA,OAAKb,UAAU,OAAMgB,SAAA,EACnBf,EAAAA,EAAAA,KAAA,QAAMD,UAAU,YAAWgB,SAAC,eAC5Bf,EAAAA,EAAAA,KAAA,QAAMD,UAAU,OAAMgB,SACf,OAAJ0B,QAAI,IAAJA,GAAgB,QAAZP,EAAJO,EAAMiD,kBAAU,IAAAxD,OAAZ,EAAJA,EAAkBa,KAAI,CAACyC,EAAGC,KACzB7E,EAAAA,EAAAA,MAAA,QAAAG,SAAA,CACGyE,EAAE1B,MACE,OAAJrB,QAAI,IAAJA,OAAI,EAAJA,EAAMiD,WAAWH,QAAS,IAAME,GAAK,OAF7BA,gBAUtBjF,IACCR,EAAAA,EAAAA,KAAC2F,EAAU,CACTnF,KAAMA,EACNC,QAASA,EACTC,QAASA,EACTC,WAAYA,aAYhC,E,2FC3HA,QApEA,SAAad,GAAqB,IAApB,KAAE4C,EAAI,QAAEC,GAAS7C,EAc7B,OACEG,EAAAA,EAAAA,KAAA,OAAKD,UAAU,mEAAkEgB,UAC/EH,EAAAA,EAAAA,MAACgD,EAAAA,EAAS,CAAA7C,SAAA,EACRf,EAAAA,EAAAA,KAAA,OAAKD,UAAU,+BAA8BgB,UAC3Cf,EAAAA,EAAAA,KAAA,MAAID,UAAU,qEAAoEgB,SAAC,eAInF2B,GAqCA1C,EAAAA,EAAAA,KAAA,OAAKD,UAAU,oDAAmDgB,UAxDtEf,EAAAA,EAAAA,KAAA,OAAKD,UAAU,+IAA8IgB,SAC1J6E,MAAMC,KAAK,CAAEN,OAAQ,IAAKxC,KAAI,CAAC+C,EAAGC,KACjC/F,EAAAA,EAAAA,KAAA,OAEED,UAAU,0FADLgG,UAiBP/F,EAAAA,EAAAA,KAACgG,EAAAA,GAAM,CACLC,cAAe,EACfC,aAAc,GACdC,UAAU,EACVC,WAAY,CAAEC,WAAW,GACzBC,YAAa,CACX,IAAK,CAAEL,cAAe,EAAGC,aAAc,IACvC,IAAK,CAAED,cAAe,EAAGC,aAAc,IACvC,IAAK,CAAED,cAAe,EAAGC,aAAc,IACvC,IAAK,CAAED,cAAe,EAAGC,aAAc,IACvC,KAAM,CAAED,cAAe,EAAGC,aAAc,IACxC,KAAM,CAAED,cAAe,EAAGC,aAAc,KAE1CnG,UAAU,WAAUgB,SAEf,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMM,KAAKwD,IACVvG,EAAAA,EAAAA,KAACwG,EAAAA,GAAW,CAEVzG,UAAU,oDAAmDgB,UAE7DH,EAAAA,EAAAA,MAAA,OAAKb,UAAU,sEAAqEgB,SAAA,EAClFf,EAAAA,EAAAA,KAAA,OAAKD,UAAU,cAAagB,UAC1Bf,EAAAA,EAAAA,KAACyG,EAAG,CACF1G,UAAU,0JACVD,IAAKyG,EAAKG,cAAgBC,OAG9B3G,EAAAA,EAAAA,KAAA,KAAGD,UAAU,qBAAoBgB,SAAEwF,EAAKzC,KAAK8C,MAAM,EAAG,OACtD5G,EAAAA,EAAAA,KAAA,KAAGD,UAAU,6DAA4DgB,SACtEwF,EAAKM,gBAZLN,EAAKhE,YA0B1B,E,gBC8BA,QA9FA,SAAsB1C,GAAqB,IAADiH,EAAA,IAAnB,KAAErE,EAAI,QAAEC,GAAS7C,EACtC,MAAOW,EAAMC,IAAW4B,EAAAA,EAAAA,WAAS,IAC1B3B,EAASC,IAAc0B,EAAAA,EAAAA,UAAS,MAevC,OACErC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iCAAgCgB,UAC7CH,EAAAA,EAAAA,MAACgD,EAAAA,EAAS,CAAA7C,SAAA,EACRf,EAAAA,EAAAA,KAAA,OAAKD,UAAU,+BAA8BgB,UAC3Cf,EAAAA,EAAAA,KAAA,MAAID,UAAU,qEAAoEgB,SAAC,aAInF2B,GAmDA1C,EAAAA,EAAAA,KAAA,OAAKD,UAAU,+DAA8DgB,UAtEjFf,EAAAA,EAAAA,KAAA,OAAKD,UAAU,+IAA8IgB,SAC1J6E,MAAMC,KAAK,CAAEN,OAAQ,IAAKxC,KAAI,CAAC+C,EAAGC,KACjC/F,EAAAA,EAAAA,KAAA,OAEED,UAAU,wFADLgG,UAiBN/F,EAAAA,EAAAA,KAAA,OAAKD,UAAU,YAAWgB,UAC3Bf,EAAAA,EAAAA,KAACgG,EAAAA,GAAM,CACLC,cAAe,EACfC,aAAc,GACdC,UAAU,EACVY,UAAW,CAAEC,WAAW,GACxBZ,WAAY,CAAEC,WAAW,GACzBC,YAAa,CACX,IAAK,CAAEL,cAAe,EAAGC,aAAc,IACvC,IAAK,CAAED,cAAe,EAAGC,aAAc,IACvC,IAAK,CAAED,cAAe,EAAGC,aAAc,IACvC,IAAK,CAAED,cAAe,EAAGC,aAAc,IACvC,KAAM,CAAED,cAAe,EAAGC,aAAc,IACxC,KAAM,CAAED,cAAe,EAAGC,aAAc,KAE1CnG,UAAU,WAAUgB,SAGb,OAAJ0B,QAAI,IAAJA,GAAa,QAATqE,EAAJrE,EAAMwE,eAAO,IAAAH,OAAT,EAAJA,EAAe/D,KAAKZ,IAEjBnC,EAAAA,EAAAA,KAACwG,EAAAA,GAAW,CAEVzG,UAAU,yDAAwDgB,UAElEH,EAAAA,EAAAA,MAAA,OACEb,UAAU,+EACVc,QAASA,KACPF,EAAWwB,EAAMyC,KACjBnE,GAAQ,EAAK,EACbM,SAAA,EAEFH,EAAAA,EAAAA,MAAA,OAAKb,UAAU,uCAAsCgB,SAAA,EACnDf,EAAAA,EAAAA,KAAA,OACED,UAAU,mIACVD,IAAG,8BAAAS,OAAgC4B,EAAMyC,IAAG,kBAC5C1E,IAAI,MAENF,EAAAA,EAAAA,KAAC6E,EAAAA,IAAe,CAAC9E,UAAU,oPAE7Ba,EAAAA,EAAAA,MAAA,OAAKb,UAAU,iEAAgEgB,SAAA,CAC5EoB,EAAM2B,KAAK8C,MAAM,EAAG,IAAI,aAnBxBzE,EAAMI,UAkCtB/B,IACCR,EAAAA,EAAAA,KAAC2F,EAAU,CACTnF,KAAMA,EACNC,QAASA,EACTC,QAASA,EACTC,WAAYA,QAMxB,E,cC1CA,QApDA,WAAoB,IAADmG,EACjB,MAAM,UAAExE,EAAS,GAAEC,IAAOC,EAAAA,EAAAA,MACpB,KAAEC,EAAI,QAAEC,IAAYC,EAAAA,EAAAA,GAAS,IAADpC,OAAK+B,EAAS,KAAA/B,OAAIgC,EAAE,aAC9CE,KAAMyE,EAASxE,QAASyE,IAAmBxE,EAAAA,EAAAA,GAAS,IAADpC,OACrD+B,EAAS,KAAA/B,OAAIgC,EAAE,aAcrB,OACEvC,EAAAA,EAAAA,KAAA,OAAAe,SACI2B,GAXF1C,EAAAA,EAAAA,KAAC4D,EAAAA,EAAS,CAAA7C,UACRH,EAAAA,EAAAA,MAAA,OAAKb,UAAU,wHAAuHgB,SAAA,EACpIf,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iFACfC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,gFASjBa,EAAAA,EAAAA,MAAC4C,EAAAA,SAAc,CAAAzC,SAAA,EACbf,EAAAA,EAAAA,KAACoH,EAAa,CAACjF,MAAW,OAAJM,QAAI,IAAJA,GAAa,QAATqE,EAAJrE,EAAMwE,eAAO,IAAAH,OAAT,EAAJA,EAAgB,GAAI1E,KAAa,OAAP8E,QAAO,IAAPA,OAAO,EAAPA,EAAS9E,QACjD,OAAP8E,QAAO,IAAPA,OAAO,EAAPA,EAASG,KAAK9B,QAAS,IACtBvF,EAAAA,EAAAA,KAACsH,EAAI,CACH7E,MAAa,OAAPyE,QAAO,IAAPA,OAAO,EAAPA,EAASG,KAAK9B,QAAS,EAAW,OAAP2B,QAAO,IAAPA,OAAO,EAAPA,EAASG,KAAc,OAAPH,QAAO,IAAPA,OAAO,EAAPA,EAAS9E,KAC1DM,QAASyE,KAGR,OAAJ1E,QAAI,IAAJA,OAAI,EAAJA,EAAMwE,QAAQ1B,QAAS,IACtBvF,EAAAA,EAAAA,KAACuH,EAAa,CAAC9E,KAAMA,EAAMC,QAASA,KAEtC1C,EAAAA,EAAAA,KAACwH,EAAAA,EAAO,CACNvG,IAAG,IAAAV,OAAM+B,EAAS,KAAA/B,OAAIgC,EAAE,YACxBD,UAAWA,EACXC,GAAIA,EACJwB,MAAqB,OAAdzB,EAAqB,mBAAqB,oBAEnDtC,EAAAA,EAAAA,KAACwH,EAAAA,EAAO,CACNvG,IAAG,IAAAV,OAAM+B,EAAS,KAAA/B,OAAIgC,EAAE,oBACxBD,UAAWA,EACXC,GAAIA,EACJwB,MAAO,wBAQnB,C,yHCeA,QAjEA,SAAgBlE,GAAiC,IAADiH,EAAAW,EAAA,IAA/B,IAAExG,EAAG,UAAEqB,EAAS,GAAEC,EAAE,MAAEwB,GAAOlE,EAC5C,MAAM,KAAE4C,EAAI,QAAEC,IAAYC,EAAAA,EAAAA,GAAS1B,GAgBnC,OACEjB,EAAAA,EAAAA,KAAA,OAAKD,UAAU,+DAA8DgB,UAC3EH,EAAAA,EAAAA,MAACgD,EAAAA,EAAS,CAAA7C,SAAA,EACH,OAAJ0B,QAAI,IAAJA,GAAa,QAATqE,EAAJrE,EAAMwE,eAAO,IAAAH,OAAT,EAAJA,EAAevB,QAAS,IACvBvF,EAAAA,EAAAA,KAAA,OAAKD,UAAU,yBAAwBgB,UACrCf,EAAAA,EAAAA,KAAA,MAAID,UAAU,2EAA0EgB,SACrFgD,MAILrB,GA6BA1C,EAAAA,EAAAA,KAAA,OAAKD,UAAU,oDAAmDgB,UAlDtEf,EAAAA,EAAAA,KAAA,OAAKD,UAAU,qIAAoIgB,SAChJ6E,MAAMC,KAAK,CAAEN,OAAQ,IAAKxC,KAAI,CAAC+C,EAAGC,KACjC/F,EAAAA,EAAAA,KAAA,OAEED,UAAU,wFADLgG,UAmBP/F,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iBAAgBgB,UAC7Bf,EAAAA,EAAAA,KAACgG,EAAAA,GAAM,CACLC,cAAe,EACfC,aAAc,GACdC,UAAU,EACVC,WAAY,CAAEC,WAAW,GACzBC,YAAa,CACX,IAAK,CAAEL,cAAe,EAAGC,aAAc,IACvC,IAAK,CAAED,cAAe,EAAGC,aAAc,IACvC,IAAK,CAAED,cAAe,EAAGC,aAAc,IACvC,IAAK,CAAED,cAAe,EAAGC,aAAc,IACvC,KAAM,CAAED,cAAe,EAAGC,aAAc,IACxC,KAAM,CAAED,cAAe,EAAGC,aAAc,KAG1CnG,UAAU,WAAUgB,SAEf,OAAJ0B,QAAI,IAAJA,GAAa,QAATgF,EAAJhF,EAAMwE,eAAO,IAAAQ,OAAT,EAAJA,EAAe1E,KAAKwD,IACnBvG,EAAAA,EAAAA,KAACwG,EAAAA,GAAW,CAEVzG,UAAU,8CAA6CgB,UAEvDf,EAAAA,EAAAA,KAAC0H,EAAAA,EAAI,CAACC,WAAYrF,EAAyBG,KAAM8D,GAAfA,EAAKhE,KAHlCgE,EAAKhE,cAgB5B,C","sources":["components/IMG.jsx","components/VideoPopup.jsx","components/TiltImage.jsx","components/HDimg.jsx","pages/details/detail-banner/DetailsBanner.jsx","pages/details/cast/Cast.jsx","pages/details/videoSection/VideosSection.jsx","pages/details/Details.jsx","pages/details/related/Related.jsx"],"sourcesContent":["import React from 'react'\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\nfunction IMG({ src, className }) {\r\n  return (\r\n    <LazyLoadImage\r\n            className={className || \"\"}\r\n            alt=\"\"\r\n            effect=\"blur\"\r\n            wrapperProps={{\r\n              style: {transitionDelay: \"1s\"},\r\n          }}\r\n            src={`https://image.tmdb.org/t/p/w780${src}`}\r\n        />\r\n  )\r\n}\r\n\r\nexport default IMG\r\n","import React from \"react\";\r\nimport { FaRegWindowClose } from \"react-icons/fa\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\n\r\nfunction VideoPopup({ show, setShow, videoId, setVideoId }) {\r\n  // console.log(\"active\");\r\n  const hidePopup = () => {\r\n    setShow(false);\r\n    setVideoId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"top-0 left-0 z-50 fixed w-screen h-screen video-container\"  onClick={hidePopup}>\r\n      <div\r\n        className=\"top-0 absolute bg-black opacity-50 opacity-layer w-full h-full transition-all duration-300 ease-in-out\"\r\n       \r\n      ></div>\r\n      <div className=\"top-0 right-0 md:right-20 xl:right-32 absolute w-full h-full container video-player\">\r\n        <div className=\"relative flex justify-center items-center w-full h-full container\">\r\n          {/* <span\r\n            className=\"top-20 right-2 md:right-40 absolute close-btn\"\r\n            onClick={hidePopup}\r\n          >\r\n            <FaRegWindowClose className=\"text-4xl text-white hover:text-red-500 cursor-pointer\" />\r\n          </span> */}\r\n          <div className=\"relative w-full lg:w-1/2 h-1/2 lg:h-1/2\">\r\n \r\n\r\n          <ReactPlayer\r\n            url={`https://www.youtube.com/watch?v=${videoId}`}\r\n            controls\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            // playing={true}\r\n            />\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoPopup;\r\n","import React from \"react\";\r\nimport Tilt from \"react-parallax-tilt\";\r\n\r\nfunction TiltImage({trackWindow, src, className }) {\r\n  return (\r\n    <Tilt\r\n    trackOnWindow={true}\r\n    tiltMaxAngleX={30}\r\n    tiltMaxAngleY={30}\r\n    perspective={1000}\r\n    transitionSpeed={500}\r\n    gyroscope={true}\r\n    glareEnable={true}\r\n    glareMaxOpacity={0.5}\r\n    glareReverse={true}\r\n    scale={1}\r\n\r\n    >\r\n      <img src={`https://image.tmdb.org/t/p/w780${src}`} alt=\"\" className={className} />\r\n    </Tilt>\r\n  );\r\n}\r\n\r\nexport default TiltImage;\r\n","import React from 'react'\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\nfunction HDimg({ src, className }) {\r\n  return (\r\n    <LazyLoadImage\r\n            className={className || \"\"}\r\n            alt=\"\"\r\n       \r\n            effect=\"blur\"\r\n            wrapperProps={{\r\n                style: {transitionDelay: \"1s\"},\r\n            }}\r\n            src={`https://image.tmdb.org/t/p/original${src}`}\r\n        />\r\n  )\r\n}\r\n\r\nexport default HDimg","import React, { useMemo, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useFetch from \"../../../hooks/useFetchData\";\r\nimport IMG from \"../../../components/IMG\";\r\nimport Container from \"../../../components/Container\";\r\nimport dayjs from \"dayjs\";\r\nimport Genres from \"../../../components/Genres\";\r\nimport CircleRating from \"../../../components/CircleRating\";\r\nimport { PlayIcon } from \"../../../components/Playbtn\";\r\nimport VideoPopup from \"../../../components/VideoPopup\";\r\nimport { IoIosPlay, IoIosPlayCircle } from \"react-icons/io\";\r\nimport TiltImage from \"../../../components/TiltImage\";\r\nimport HDimg from \"../../../components/HDimg\";\r\n\r\nfunction DetailsBanner({ video, crew }) {\r\n  const PosterFallback = \"../assets/no-poster.png\";\r\n  const [show, setShow] = useState(false);\r\n  const [videoId, setVideoId] = useState(null);\r\n  const { mediaType, id } = useParams();\r\n  const { data, loading } = useFetch(`/${mediaType}/${id}`);\r\n\r\n  const genres = useMemo(() => data?.genres?.map((g) => g.id), [data]);\r\n  const director = useMemo(() => crew?.filter((f) => f.job === \"Director\"), [crew]);\r\n  const writer = useMemo(\r\n    () => crew?.filter((f) => [\"Screenplay\", \"Story\", \"Writer\"].includes(f.job)),\r\n    [crew]\r\n  );\r\n\r\n  const toHoursAndMinutes = (totalMinutes) => {\r\n    const hours = Math.floor(totalMinutes / 60);\r\n    const minutes = totalMinutes % 60;\r\n    return `${hours}h${minutes > 0 ? ` ${minutes}m` : \"\"}`;\r\n  };\r\n\r\n  const handleOpenVideo = () => {\r\n    setShow(true);\r\n    setVideoId(video.key);\r\n  };\r\n\r\n  const renderInfoItem = (label, value) => (\r\n    <div className=\"capitalize infoItem\">\r\n      <span className=\"font-bold\">{label}: </span>\r\n      <span className=\"opacity-60\">{value}</span>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"detail-container\">\r\n      {!loading ? (\r\n        <>\r\n          {!!data && (\r\n            <React.Fragment>\r\n              <div className=\"top-0 -z-20 absolute backdrop-img w-full h-full\">\r\n                <HDimg\r\n                  className={\"w-screen brightness-50 object-cover h-screen\"}\r\n                  src={data.backdrop_path || data.poster_path}\r\n                />\r\n                {/* <img className=\"w-screen h-screen object-cover\" src={`https://image.tmdb.org/t/p/original${data.backdrop_path || data.poster_path}`} alt=\"\"  loading=\"lazy\"/> */}\r\n              </div>\r\n              <div className=\"top-0 -z-10 absolute bg-gradient-to-t from-netflixbackground via-transparent to-netflixbackground bg-opacity-70 opacity-layer w-screen h-screen\"></div>\r\n              <Container>\r\n                <div className=\"relative flex md:flex-row flex-col justify-start items-start pt-20 w-full h-full md:h-screen text-netflixWhite\">\r\n                  <div className=\"left p-10 w-full md:w-1/3 h-full\">\r\n                    {data.poster_path ? (\r\n                      <TiltImage\r\n                     \r\n                        className=\"shadow-lg shadow-red-500 rounded-lg w-full h-full cursor-pointer object-cover posterImg\"\r\n                        src={data.poster_path}\r\n                      />\r\n                    ) : (\r\n                      <TiltImage\r\n                       \r\n                        className=\"shadow-lg shadow-red-500 rounded-lg w-full h-full cursor-pointer object-cover posterImg\"\r\n                        src={PosterFallback}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <div className=\"right flex flex-col justify-between items-start gap-2 p-10 w-full md:w-1/2 h-full md:h-[90%]\">\r\n                    <div className=\"font-semibold text-3xl title\">\r\n                      {`${data.name || data.title}  (${dayjs(\r\n                        data?.release_date\r\n                      ).format(\"YYYY\")})`}\r\n                    </div>\r\n                    <div className=\"opacity-80 text-lg italic subtitle\">\r\n                      {data.tagline}\r\n                    </div>\r\n                    <div className=\"flex justify-start items-start w-full geners\">\r\n                      <Genres data={genres} type={mediaType} />\r\n                    </div>\r\n                    <div className=\"flex justify-start items-center gap-4 w-full row\">\r\n                      <CircleRating\r\n                        text={\"35px\"}\r\n                        width={\"w-20 shadow-md shadow-white\"}\r\n                        rating={data.vote_average.toFixed(1)}\r\n                      />\r\n                      <div\r\n                        className=\"relative flex justify-start items-center w-1/2 cursor-pointer group playBtn\"\r\n                        onClick={handleOpenVideo}\r\n                      >\r\n                        {/* <IoIosPlay  className=\"top-7 hover:top-5 left-7 absolute text-5xl transition-all duration-300\"/> */}\r\n                        <IoIosPlayCircle className=\"group-hover:scale-105 group-hover:rotate-90 group-hover:text-netflixRed opacity-50 group-hover:opacity-100 text-8xl transition-all duration-300 delay-100 ease-in-out\" />\r\n\r\n                        <span className=\"group-hover:text-netflixRed font-semibold text-xl transition-all duration-300 ease-in\">\r\n                          Watch Trailer\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"overview\">\r\n                      <div className=\"mb-2 font-semibold text-3xl capitalize heading\">\r\n                        overview\r\n                      </div>\r\n                      <div className=\"font-semibold capitalize description\">\r\n                        {data.overview}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex justify-start items-center gap-4 text-lg info\">\r\n                      {data.status && (\r\n                        <div className=\"capitalize infoItem\">\r\n                          <span className=\"font-bold text\">Status: </span>\r\n                          <span className=\"opacity-60 text text\">\r\n                            {data.status}\r\n                          </span>\r\n                        </div>\r\n                      )}\r\n                      {data.release_date && (\r\n                        <div className=\"capitalize infoItem\">\r\n                          <span className=\"font-bold text\">Release Date: </span>\r\n                          <span className=\"opacity-60 text\">\r\n                            {dayjs(data.release_date).format(\"MMM D, YYYY\")}\r\n                          </span>\r\n                        </div>\r\n                      )}\r\n                      {data.runtime && (\r\n                        <div className=\"capitalize infoItem\">\r\n                          <span className=\"font-bold text\">Runtime: </span>\r\n                          <span className=\"opacity-60 text\">\r\n                            {toHoursAndMinutes(data.runtime)}\r\n                          </span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    {director?.length > 0 && (\r\n                      <div className=\"info\">\r\n                        <span className=\"font-bold text\">Director: </span>\r\n                        <span className=\"opacity-60 text\">\r\n                          {director?.map((d, i) => (\r\n                            <span key={i}>\r\n                              {d.name}\r\n                              {director.length - 1 !== i && \", \"}\r\n                            </span>\r\n                          ))}\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n\r\n                    {writer?.length > 0 && (\r\n                      <div className=\"info\">\r\n                        <span className=\"font-bold text\">Writer: </span>\r\n                        <span className=\"opacity-60 text\">\r\n                          {writer?.map((d, i) => (\r\n                            <span key={i}>\r\n                              {d.name}\r\n                              {writer.length - 1 !== i && \", \"}\r\n                            </span>\r\n                          ))}\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n\r\n                    {data?.created_by?.length > 0 && (\r\n                      <div className=\"info\">\r\n                        <span className=\"bold text\">Creator: </span>\r\n                        <span className=\"text\">\r\n                          {data?.created_by?.map((d, i) => (\r\n                            <span key={i}>\r\n                              {d.name}\r\n                              {data?.created_by.length - 1 !== i && \", \"}\r\n                            </span>\r\n                          ))}\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                {show && (\r\n                  <VideoPopup\r\n                    show={show}\r\n                    setShow={setShow}\r\n                    videoId={videoId}\r\n                    setVideoId={setVideoId}\r\n                  />\r\n                )}\r\n              </Container>\r\n            </React.Fragment>\r\n          )}\r\n        </>\r\n      ) : (\r\n        \"Loading....\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailsBanner;\r\n// /  const PosterFallback = \"../assets/no-poster.png\";\r\n//   const [show, setShow] = useState(false);\r\n//   const [videoId, setVideoId] = useState(null);\r\n//   const { mediaType, id } = useParams();\r\n//   const { data, loading } = useFetch(`/${mediaType}/${id}`);\r\n\r\n  \r\n//   const _genres = data?.genres?.map((g) => g.id);\r\n//   const director = crew?.filter((f) => f.job === \"Director\");\r\n//   const writer = crew?.filter(\r\n//     (f) => f.job === \"Screenplay\" || f.job === \"Story\" || f.job === \"Writer\"\r\n//   );\r\n\r\n//   const toHoursAndMinutes = (totalMinutes) => {\r\n//     const hours = Math.floor(totalMinutes / 60);\r\n//     const minutes = totalMinutes % 60;\r\n//     return `${hours}h${minutes > 0 ? ` ${minutes}m` : \"\"}`;\r\n//   };\r\n\r\n//   const handleOpenVideo = () => {\r\n//     setShow(true);\r\n//     setVideoId(video.key);\r\n//   };","import React from \"react\";\r\nimport Container from \"../../../components/Container\";\r\nimport avatar from \"../../../assets/avatar.png\";\r\nimport IMG from \"../../../components/IMG\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/free-mode\";\r\nimport \"swiper/css/pagination\";\r\n\r\nfunction Cast({ data, loading }) {\r\n  const skeleton = () => {\r\n    return (\r\n      <div className=\"items-center gap-10 space-y-2 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 px-10 pb-10 w-full main-container\">\r\n        {Array.from({ length: 6 }).map((_, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"bg-gray-500 rounded-full w-[150px] h-[150px] animate-pulse cursor-pointer object-cover\"\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-netflixbackground py-10 w-full h-full text-white cart-section\">\r\n      <Container>\r\n        <div className=\"px-10 w-full section-heading\">\r\n          <h1 className=\"font-semibold text-3xl underline underline-offset-8 tracking-wider\">\r\n            Top Cast\r\n          </h1>\r\n        </div>\r\n        {!loading ? (\r\n          <Swiper\r\n            slidesPerView={2}\r\n            spaceBetween={10}\r\n            freeMode={true}\r\n            pagination={{ clickable: true }}\r\n            breakpoints={{\r\n              320: { slidesPerView: 2, spaceBetween: 10 },\r\n              480: { slidesPerView: 2, spaceBetween: 10 },\r\n              640: { slidesPerView: 3, spaceBetween: 10 },\r\n              768: { slidesPerView: 4, spaceBetween: 10 },\r\n              1024: { slidesPerView: 5, spaceBetween: 10 },\r\n              1280: { slidesPerView: 6, spaceBetween: 20 },\r\n            }}\r\n            className=\"mySwiper\"\r\n          >\r\n            {data?.map((item) => (\r\n              <SwiperSlide\r\n                key={item.id}\r\n                className=\"relative pt-10 w-full h-full cursor-pointer group\"\r\n              >\r\n                <div className=\"flex flex-col justify-center items-center gap-2 px-10 w-full h-full\">\r\n                  <div className=\"profile-img\">\r\n                    <IMG\r\n                      className=\"shadow-md shadow-red-500 rounded-full w-[200px] hover:scale-105 h-[120px] transform transition-all duration-500 cursor-pointer ease-in-out object-cover\"\r\n                      src={item.profile_path || avatar}\r\n                    />\r\n                  </div>\r\n                  <p className=\"font-semibold name\">{item.name.slice(0, 14)}</p>\r\n                  <p className=\"text-center text-xs underline underline-offset-2 character\">\r\n                    {item.character}\r\n                  </p>\r\n                </div>\r\n              </SwiperSlide>\r\n            ))}\r\n          </Swiper>\r\n        ) : (\r\n          <div className=\"flex justify-start items-start gap-4 castSkeleton\">\r\n            {skeleton()}\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cast;\r\n","import React, { useState } from \"react\";\r\nimport Container from \"../../../components/Container\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/free-mode\";\r\nimport \"swiper/css/pagination\";\r\nimport \"swiper/css/autoplay\";\r\nimport { IoIosPlayCircle } from \"react-icons/io\";\r\nimport VideoPopup from \"../../../components/VideoPopup\";\r\nimport 'swiper/css/scrollbar';\r\n\r\nfunction VideosSection({ data, loading }) {\r\n  const [show, setShow] = useState(false);\r\n  const [videoId, setVideoId] = useState(null);\r\n\r\n  const loadingSkeleton = () => {\r\n    return (\r\n      <div className=\"items-center gap-10 space-y-2 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-4 px-10 pb-10 w-full main-container\">\r\n        {Array.from({ length: 4 }).map((_, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"bg-gray-500 rounded-md w-[250px] h-[150px] animate-pulse cursor-pointer object-cover\"\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"pb-10 text-white video-section\">\r\n      <Container>\r\n        <div className=\"px-10 w-full section-heading\">\r\n          <h1 className=\"font-semibold text-3xl underline underline-offset-8 tracking-wider\">\r\n            Videos\r\n          </h1>\r\n        </div>\r\n        {!loading ? (\r\n           <div className=\"container\">\r\n          <Swiper\r\n            slidesPerView={2}\r\n            spaceBetween={10}\r\n            freeMode={true}\r\n            scrollbar={{ draggable: true }}\r\n            pagination={{ clickable: true }}\r\n            breakpoints={{\r\n              320: { slidesPerView: 2, spaceBetween: 10 },\r\n              480: { slidesPerView: 2, spaceBetween: 10 },\r\n              640: { slidesPerView: 3, spaceBetween: 10 },\r\n              768: { slidesPerView: 4, spaceBetween: 10 },\r\n              1024: { slidesPerView: 4, spaceBetween: 10 },\r\n              1280: { slidesPerView: 4, spaceBetween: 20 },\r\n            }}\r\n            className=\"mySwiper\"\r\n          >\r\n            \r\n              {data?.results?.map((video) => {\r\n                return (\r\n                  <SwiperSlide\r\n                    key={video.id}\r\n                    className=\"relative mt-4 pt-10 w-full h-full cursor-pointer group\"\r\n                  >\r\n                    <div\r\n                      className=\"relative flex flex-col justify-center items-center gap-2 px-10 w-full h-full\"\r\n                      onClick={() => {\r\n                        setVideoId(video.key);\r\n                        setShow(true);\r\n                      }}\r\n                    >\r\n                      <div className=\"relative w-full group videoThumbnail\">\r\n                        <img\r\n                          className=\"group-hover:brightness-50 shadow-md shadow-red-500 rounded-md w-full h-full transition-all duration-300 ease-in-out object-cover\"\r\n                          src={`https://img.youtube.com/vi/${video.key}/mqdefault.jpg`}\r\n                          alt=\"\"\r\n                        />\r\n                        <IoIosPlayCircle className=\"group-hover:scale-105 group-hover:rotate-90 group-hover:text-netflixRed top-1/2 left-1/2 absolute opacity-50 group-hover:opacity-100 text-8xl transform transition-all -translate-x-1/2 -translate-y-1/2 duration-300 delay-100 ease-in-out\" />\r\n                      </div>\r\n                      <div className=\"font-semibold text-center capitalize tracking-wider videoTitle\">\r\n                        {video.name.slice(0, 35)}...\r\n                      </div>\r\n                    </div>\r\n                  </SwiperSlide>\r\n                );\r\n              })}\r\n            \r\n          </Swiper>\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex justify-start items-start gap-4 mt-4 pt-10 castSkeleton\">\r\n            {loadingSkeleton()}\r\n          </div>\r\n        )}\r\n\r\n        {show && (\r\n          <VideoPopup\r\n            show={show}\r\n            setShow={setShow}\r\n            videoId={videoId}\r\n            setVideoId={setVideoId}\r\n          />\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideosSection;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useFetch from \"../../hooks/useFetchData\";\r\nimport DetailsBanner from \"./detail-banner/DetailsBanner\";\r\nimport Cast from \"./cast/Cast\";\r\nimport VideosSection from \"./videoSection/VideosSection\";\r\nimport Related from \"./related/Related\";\r\nimport Container from \"../../components/Container\";\r\n\r\nfunction Details() {\r\n  const { mediaType, id } = useParams();\r\n  const { data, loading } = useFetch(`/${mediaType}/${id}/videos`);\r\n  const { data: credits, loading: creditsLoading } = useFetch(\r\n    `/${mediaType}/${id}/credits`\r\n  );\r\n\r\n  const loadingSkeleton = () => {\r\n    return (\r\n      <Container>\r\n        <div className=\"relative flex md:flex-row flex-col justify-center md:justify-start items-center gap-10 w-full h-screen main-container\">\r\n          <div className=\"bg-gray-500 rounded-md w-full md:w-[30%] h-[80vh] md:h-[70vh] animate-pulse\"></div>\r\n          <div className=\"md:block hidden bg-gray-500 rounded-md w-[50%] h-[70vh] animate-pulse\"></div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!loading ? (\r\n        <React.Fragment>\r\n          <DetailsBanner video={data?.results?.[0]} crew={credits?.crew} />\r\n          {credits?.cast.length > 0 && (\r\n            <Cast\r\n              data={credits?.cast.length > 0 ? credits?.cast : credits?.crew}\r\n              loading={creditsLoading}\r\n            />\r\n          )}\r\n          {data?.results.length > 0 && (\r\n            <VideosSection data={data} loading={loading} />\r\n          )}\r\n          <Related\r\n            url={`/${mediaType}/${id}/similar`}\r\n            mediaType={mediaType}\r\n            id={id}\r\n            title={mediaType === \"tv\" ? \"Similar TV Shows\" : \"Similar Movies\"}\r\n          />\r\n          <Related\r\n            url={`/${mediaType}/${id}/recommendations`}\r\n            mediaType={mediaType}\r\n            id={id}\r\n            title={\"Recommendations\"}\r\n          />\r\n        </React.Fragment>\r\n      ) : (\r\n        loadingSkeleton()\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Details;\r\n","import React from \"react\";\r\nimport useFetch from \"../../../hooks/useFetchData\";\r\nimport Container from \"../../../components/Container\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/free-mode\";\r\nimport \"swiper/css/pagination\";\r\nimport Card from \"../../../components/Card\";\r\n\r\nfunction Related({ url, mediaType, id, title }) {\r\n  const { data, loading } = useFetch(url);\r\n\r\n  \r\n  const skeleton = () => {\r\n    return (\r\n      <div className=\"items-center gap-2 space-y-2 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 mt-10 px-10 pb-10 w-full main-container\">\r\n        {Array.from({ length: 4 }).map((_, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"bg-gray-500 rounded-md w-[260px] h-[400px] animate-pulse cursor-pointer object-cover\"\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-netflixbackground w-screen h-full text-white cart-section\">\r\n      <Container>\r\n        {data?.results?.length > 0 && (\r\n          <div className=\"w-full section-heading\">\r\n            <h1 className=\"px-10 font-semibold text-3xl underline underline-offset-8 tracking-wider\">\r\n              {title}\r\n            </h1>\r\n          </div>\r\n        )}\r\n        {!loading ? (\r\n          <div className=\"p-10 container\">\r\n            <Swiper\r\n              slidesPerView={2}\r\n              spaceBetween={10}\r\n              freeMode={true}\r\n              pagination={{ clickable: true }}\r\n              breakpoints={{\r\n                320: { slidesPerView: 1, spaceBetween: 10 },\r\n                480: { slidesPerView: 1, spaceBetween: 10 },\r\n                640: { slidesPerView: 2, spaceBetween: 10 },\r\n                768: { slidesPerView: 3, spaceBetween: 10 },\r\n                1024: { slidesPerView: 4, spaceBetween: 20 },\r\n                1280: { slidesPerView: 4, spaceBetween: 20 },\r\n                // 1536: { slidesPerView: 5, spaceBetween: 20 },\r\n              }}\r\n              className=\"mySwiper\"\r\n            >\r\n              {data?.results?.map((item) => (\r\n                <SwiperSlide\r\n                  key={item.id}\r\n                  className=\"relative w-full h-full cursor-pointer group\"\r\n                >\r\n                  <Card mediaTypes={mediaType} key={item.id} data={item} />\r\n                </SwiperSlide>\r\n              ))}\r\n            </Swiper>\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex justify-start items-start gap-4 castSkeleton\">\r\n            {skeleton()}\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Related;\r\n"],"names":["_ref","src","className","_jsx","LazyLoadImage","alt","effect","wrapperProps","style","transitionDelay","concat","show","setShow","videoId","setVideoId","_jsxs","onClick","hidePopup","children","ReactPlayer","url","controls","width","height","trackWindow","Tilt","trackOnWindow","tiltMaxAngleX","tiltMaxAngleY","perspective","transitionSpeed","gyroscope","glareEnable","glareMaxOpacity","glareReverse","scale","_data$created_by","_data$created_by2","video","crew","useState","mediaType","id","useParams","data","loading","useFetch","genres","useMemo","_data$genres","map","g","director","filter","f","job","writer","includes","_Fragment","React","HDimg","backdrop_path","poster_path","Container","TiltImage","name","title","dayjs","release_date","format","tagline","Genres","type","CircleRating","text","rating","vote_average","toFixed","handleOpenVideo","key","IoIosPlayCircle","overview","status","runtime","totalMinutes","hours","Math","floor","minutes","toHoursAndMinutes","length","d","i","created_by","VideoPopup","Array","from","_","index","Swiper","slidesPerView","spaceBetween","freeMode","pagination","clickable","breakpoints","item","SwiperSlide","IMG","profile_path","avatar","slice","character","_data$results","scrollbar","draggable","results","credits","creditsLoading","DetailsBanner","cast","Cast","VideosSection","Related","_data$results2","Card","mediaTypes"],"sourceRoot":""}